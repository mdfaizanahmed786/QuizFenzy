generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId  String? @unique
  quizes    Quiz[]

  @@index([email])
}

model Player {
  id        String   @id @default(uuid())
  userName  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId    String
}

model Quiz {
  id        String     @id @default(uuid())
  quizTitle String
  isLive    Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  creator   User       @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId String     @unique
  player    Player[]
  questions Question[]
}

model Question {
  id            String   @id @default(uuid())
  questionTitle String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId        String
  answers       Answer[]
}

model Answer {
  id         String   @id @default(uuid())
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  text       String
}
